[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "kafka-guardian"
dynamic = ["version"]
description = "Autonomous monitoring and self-healing system for Apache Kafka clusters"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Chandan Kumar", email = "chandan1819@example.com"},
]
maintainers = [
    {name = "Chandan Kumar", email = "chandan1819@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.8"
dependencies = [
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "asyncio-mqtt>=0.11.0",
    "prometheus-client>=0.14.0",
    "click>=8.1.0",
    "rich>=12.0.0",
    "psutil>=5.9.0",
    "schedule>=1.2.0",
    "jinja2>=3.1.0",
    "jsonschema>=4.4.0",
    "cryptography>=37.0.0",
    "paramiko>=2.11.0",
    "ansible-runner>=2.2.0",
    "kubernetes>=23.3.0",
    "docker>=6.0.0",
    "hvac>=1.0.0",
    "consul>=1.1.0",
    "etcd3>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "pytest-asyncio>=0.18.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]
monitoring = [
    "opentelemetry-api>=1.11.0",
    "opentelemetry-sdk>=1.11.0",
    "opentelemetry-exporter-jaeger>=1.11.0",
]

[project.urls]
Homepage = "https://github.com/chandan1819/kafka-guardian"
Documentation = "https://github.com/chandan1819/kafka-guardian/blob/main/docs/"
Repository = "https://github.com/chandan1819/kafka-guardian.git"
"Bug Tracker" = "https://github.com/chandan1819/kafka-guardian/issues"
Changelog = "https://github.com/chandan1819/kafka-guardian/blob/main/CHANGELOG.md"

[project.scripts]
kafka-guardian = "kafka_self_healing.main:main"
kafka-guardian-config = "kafka_self_healing.config:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
kafka_self_healing = ["config/*.yaml", "templates/*.j2", "schemas/*.json"]

[tool.setuptools_scm]
write_to = "src/kafka_self_healing/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kafka_self_healing"]
known_third_party = ["pytest", "setuptools"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ansible_runner.*",
    "hvac.*",
    "consul.*",
    "etcd3.*",
    "kubernetes.*",
    "docker.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]